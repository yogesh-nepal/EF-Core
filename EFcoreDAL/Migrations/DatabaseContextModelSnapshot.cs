// <auto-generated />
using System;
using EFcoreDAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFcoreDAL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFmodels.APostCategoryModel", b =>
                {
                    b.Property<int?>("PostCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int?>("PostID")
                        .HasColumnType("int");

                    b.HasKey("PostCategoryID");

                    b.ToTable("tbl_Postcategory");
                });

            modelBuilder.Entity("EFmodels.APostWithMultipleImageModel", b =>
                {
                    b.Property<int?>("MultipleImagePostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

<<<<<<< HEAD
                    b.Property<string>("AuthorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullDescription")
                        .HasColumnType("nvarchar(max)");

=======
>>>>>>> ea941148eddb45598dd2392b9b31454ee9217953
                    b.Property<string>("ImageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageTitle")
                        .HasColumnType("nvarchar(max)");

<<<<<<< HEAD
                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
=======
                    b.Property<string>("MultipleImageData")
>>>>>>> ea941148eddb45598dd2392b9b31454ee9217953
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MultipleImagePostID");

                    b.ToTable("tbl_MultipleImagePost");
                });

            modelBuilder.Entity("EFmodels.CategoryModel", b =>
                {
                    b.Property<int?>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("tbl_Category");
                });

<<<<<<< HEAD
            modelBuilder.Entity("EFmodels.MediaPostModel", b =>
                {
                    b.Property<int?>("MediaPostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MediaAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaPostDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaPostPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaThumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MediaViews")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("datetime");

                    b.HasKey("MediaPostID");

                    b.ToTable("tbl_MediaPost");
                });

=======
>>>>>>> ea941148eddb45598dd2392b9b31454ee9217953
            modelBuilder.Entity("EFmodels.MenuModel", b =>
                {
                    b.Property<int?>("MenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuUnder")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuID");

                    b.ToTable("tbl_Menu");
                });

<<<<<<< HEAD
            modelBuilder.Entity("EFmodels.MultipleImageData", b =>
                {
                    b.Property<int?>("MultipleImageDataID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("APostMultipleImagePostID")
                        .HasColumnType("int");

                    b.Property<string>("ImagePathData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MultipleImageDataID");

                    b.HasIndex("APostMultipleImagePostID");

                    b.ToTable("tbl_MultipleImageData");
                });

            modelBuilder.Entity("EFmodels.PostModel", b =>
                {
                    b.Property<int?>("PostID")
=======
            modelBuilder.Entity("EFmodels.PostModel", b =>
                {
                    b.Property<int>("PostID")
>>>>>>> ea941148eddb45598dd2392b9b31454ee9217953
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorName")
                        .HasColumnType("nvarchar(max)");

<<<<<<< HEAD
=======
                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

>>>>>>> ea941148eddb45598dd2392b9b31454ee9217953
                    b.Property<string>("FullDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

<<<<<<< HEAD
                    b.Property<DateTime?>("PublishDate")
=======
                    b.Property<DateTime>("PublishDate")
>>>>>>> ea941148eddb45598dd2392b9b31454ee9217953
                        .HasColumnType("datetime");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.HasKey("PostID");

                    b.ToTable("tbl_Post");
                });

            modelBuilder.Entity("EFmodels.RoleModel", b =>
                {
                    b.Property<int?>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("tbl_Role");
                });

            modelBuilder.Entity("EFmodels.UserMenuModel", b =>
                {
                    b.Property<int?>("MUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MenuID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("MUID");

                    b.ToTable("tbl_UserMenu");
                });

            modelBuilder.Entity("EFmodels.UserModel", b =>
                {
                    b.Property<int?>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("UserAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmailID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserGender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("tbl_User");
                });

            modelBuilder.Entity("EFmodels.UserWithRoleModel", b =>
                {
                    b.Property<int?>("RUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("RUID");

                    b.ToTable("tbl_UserRole");
                });
<<<<<<< HEAD

            modelBuilder.Entity("EFmodels.MultipleImageData", b =>
                {
                    b.HasOne("EFmodels.APostWithMultipleImageModel", "APost")
                        .WithMany("MultipleImageData")
                        .HasForeignKey("APostMultipleImagePostID");
                });
=======
>>>>>>> ea941148eddb45598dd2392b9b31454ee9217953
#pragma warning restore 612, 618
        }
    }
}
